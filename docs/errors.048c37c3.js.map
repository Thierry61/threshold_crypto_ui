{"version":3,"sources":["js/errors.js"],"names":["ErrorDisplay","selector","el","document","querySelectorAll","show","msg","textContent","classList","remove","hide","add","skErrMsg","size","skLen","errMsg","toString","pkErrMsg","pkLen","sigErrMsg","sigLen","msgErrMsg","maxMsgLen","ctErrMsg","ctLen","deriveError","signError","verifyError","encryptError","decryptError"],"mappings":";AAgEO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,QAAA,UAAA,EAAA,QAAA,UAAA,EAAA,QAAA,SAAA,EAAA,QAAA,aAAA,QAAA,aAAA,QAAA,YAAA,QAAA,UAAA,QAAA,iBAAA,EAhEP,IAAIA,EAAe,SAASC,GAEpBC,IAAAA,EAAKC,SAASC,iBAAiBH,GAAU,GAExCI,KAAAA,KAAO,SAASC,GACjBJ,EAAGK,YAAcD,EACjBJ,EAAGM,UAAUC,OAAO,WAGnBC,KAAAA,KAAO,WACRR,EAAGM,UAAUG,IAAI,YAKlB,SAASC,EAASC,EAAMC,GACvBC,IAAAA,EAAS,6BAKNA,OAJPA,IAAmB,EAARD,GAAWE,WACtBD,GAAU,eACVA,GAAUF,EAAKG,WACfD,GAAU,aAIP,SAASE,EAASJ,EAAMK,GACvBH,IAAAA,EAAS,6BAKNA,OAJPA,IAAmB,EAARG,GAAWF,WACtBD,GAAU,eACVA,GAAUF,EAAKG,WACfD,GAAU,aAIP,SAASI,EAAUN,EAAMO,GACxBL,IAAAA,EAAS,4BAKNA,OAJPA,IAAoB,EAATK,GAAYJ,WACvBD,GAAU,eACVA,GAAUF,EAAKG,WACfD,GAAU,aAIP,SAASM,EAAUR,GAClBE,IAAAA,EAAS,0BAKNA,OAJPA,GAAWO,UAAWN,WACtBD,GAAU,WACVA,GAAUF,EAAKG,WACfD,GAAU,aAIP,SAASQ,EAASV,GACjBE,IAAAA,EAAS,6BAKNA,OAJPA,IAAmB,EAARS,OAAWR,WACtBD,GAAU,eACVA,GAAUF,EAAKG,WACfD,GAAU,aAIP,IAAIU,EAAc,IAAIzB,EAAa,oBAInC,QAAA,YAAA,EAHA,IAAI0B,EAAY,IAAI1B,EAAa,oBAGjC,QAAA,UAAA,EAFA,IAAI2B,EAAc,IAAI3B,EAAa,kBAEnC,QAAA,YAAA,EADA,IAAI4B,EAAe,IAAI5B,EAAa,mBACpC,QAAA,aAAA,EAAA,IAAI6B,EAAe,IAAI7B,EAAa,mBAApC,QAAA,aAAA","file":"errors.048c37c3.js","sourceRoot":"../html","sourcesContent":["let ErrorDisplay = function(selector) {\n\n    let el = document.querySelectorAll(selector)[0];\n\n    this.show = function(msg) {\n        el.textContent = msg;\n        el.classList.remove(\"hidden\");\n    }\n\n    this.hide = function() {\n        el.classList.add(\"hidden\");\n    }\n\n};\n\nexport function skErrMsg(size, skLen) {\n    let errMsg = \"Secret Key length must be \";\n    errMsg += (skLen * 2).toString();\n    errMsg += \" hex chars, \";\n    errMsg += size.toString();\n    errMsg += \" provided.\";\n    return errMsg;\n}\n\nexport function pkErrMsg(size, pkLen) {\n    let errMsg = \"Public Key length must be \";\n    errMsg += (pkLen * 2).toString();\n    errMsg += \" hex chars, \";\n    errMsg += size.toString();\n    errMsg += \" provided.\";\n    return errMsg;\n}\n\nexport function sigErrMsg(size, sigLen) {\n    let errMsg = \"Signature length must be \";\n    errMsg += (sigLen * 2).toString();\n    errMsg += \" hex chars, \";\n    errMsg += size.toString();\n    errMsg += \" provided.\";\n    return errMsg;\n}\n\nexport function msgErrMsg(size) {\n    let errMsg = \"Message length must be \";\n    errMsg += (maxMsgLen).toString();\n    errMsg += \" chars, \";\n    errMsg += size.toString();\n    errMsg += \" provided.\";\n    return errMsg;\n}\n\nexport function ctErrMsg(size) {\n    let errMsg = \"Ciphertext length must be \";\n    errMsg += (ctLen * 2).toString();\n    errMsg += \" hex chars, \";\n    errMsg += size.toString();\n    errMsg += \" provided.\";\n    return errMsg;\n}\n\nexport let deriveError = new ErrorDisplay(\"#sk-to-pk .error\");\nexport let signError = new ErrorDisplay(\"#sign-msg .error\");\nexport let verifyError = new ErrorDisplay(\"#verify .error\");\nexport let encryptError = new ErrorDisplay(\"#encrypt .error\");\nexport let decryptError = new ErrorDisplay(\"#decrypt .error\");\n"]}